{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","buttons","name","color","App","useState","stateSort","setStateSort","stateReverse","setStateReverse","goods","sort","good1","good2","localeCompare","length","reverse","className","map","button","isSort","isReverse","type","classNames","onClick","good","ReactDOM","render","document","getElementById"],"mappings":"0OAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAU,CACd,CACEC,KAAM,sBACNC,MAAO,WAET,CACED,KAAM,iBACNC,MAAO,cAET,CACED,KAAM,UACNC,MAAO,eAIEC,EAAM,WACjB,MAAkCC,mBAAS,MAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAAS,MAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACIC,EAAK,UAAOV,GAEhB,OAAQM,GACN,IAAK,sBACHI,EAAQA,EAAMC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACzD,MACF,IAAK,iBACHH,EAAQA,EAAMC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAC1D,MAIF,QACEL,EAAK,UAAOV,GAOhB,OAJIQ,IACFE,EAAQA,EAAMM,WAId,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UAEGhB,EAAQiB,KAAI,SAACC,GACZ,IAAMC,EAASD,EAAOjB,OAASI,EACzBe,EAAYF,EAAOjB,OAASM,EAElC,OACE,wBAEEc,KAAK,SACLL,UAAWM,IACT,SAAUJ,EAAOhB,MAAO,CAAE,WAAYiB,GAAUC,IAElDG,QAAS,WACa,YAAhBL,EAAOjB,KAEPO,EADED,EACc,KAEAW,EAAOjB,MAGzBK,EAAaY,EAAOjB,OAd1B,SAkBGiB,EAAOjB,MAjBHiB,EAAOjB,UAwBfI,GAAaE,IAEZ,wBACEc,KAAK,SACLL,UAAU,4BACVO,QAAS,WACPjB,EAAa,MACbE,EAAgB,OALpB,sBAaN,6BACGC,EAAMQ,KAAI,SAAAO,GAAI,OAAK,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCvGpDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bda846ba.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst buttons = [\n  {\n    name: 'Sort alphabetically',\n    color: 'is-info',\n  },\n  {\n    name: 'Sort by length',\n    color: 'is-success',\n  },\n  {\n    name: 'Reverse',\n    color: 'is-warning',\n  },\n];\n\nexport const App = () => {\n  const [stateSort, setStateSort] = useState(null);\n  const [stateReverse, setStateReverse] = useState(null);\n  let goods = [...goodsFromServer];\n\n  switch (stateSort) {\n    case 'Sort alphabetically':\n      goods = goods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n    case 'Sort by length':\n      goods = goods.sort((good1, good2) => good1.length - good2.length);\n      break;\n    case null:\n      goods = [...goodsFromServer];\n      break;\n    default:\n      goods = [...goodsFromServer];\n  }\n\n  if (stateReverse) {\n    goods = goods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n\n        {buttons.map((button) => {\n          const isSort = button.name !== stateSort;\n          const isReverse = button.name !== stateReverse;\n\n          return (\n            <button\n              key={button.name}\n              type=\"button\"\n              className={classNames(\n                'button', button.color, { 'is-light': isSort && isReverse },\n              )}\n              onClick={() => {\n                if (button.name === 'Reverse') {\n                  if (stateReverse) {\n                    setStateReverse(null);\n                  } else {\n                    setStateReverse(button.name);\n                  }\n                } else {\n                  setStateSort(button.name);\n                }\n              }}\n            >\n              {button.name}\n            </button>\n          );\n        })\n        }\n\n        {\n          (stateSort || stateReverse)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setStateSort(null);\n                setStateReverse(null);\n              }}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {goods.map(good => (<li data-cy=\"Good\" key={good}>{good}</li>))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}